/****************************************************************************
 * Copyright Â©2017 Brian Curless.  All rights reserved.  Permission is hereby
 * granted to students registered for University of Washington CSE 457 or CSE
 * 557 for use solely during Autumn Quarter 2017 for purposes of the course.
 * No other use, copying, distribution, or modification is permitted without
 * prior written consent. Copyrights for third-party components of this work
 * must be honored.  Instructors interested in reusing these course materials
 * should contact the author.
 ****************************************************************************/
#ifndef CUBE_H
#define CUBE_H

#include <animator.h>

// Mesh data for a Cube
// Note: This data is better off de-interleaved
class Cube {
public:
    static std::vector<float> Vertices() {
        static const std::vector<float> vertices {
            -0.5f, -0.5f, -0.5f,
            -0.5f,  0.5f, -0.5f,
             0.5f, -0.5f, -0.5f,
             0.5f,  0.5f, -0.5f,

            -0.5f, -0.5f,  0.5f,
            -0.5f,  0.5f,  0.5f,
             0.5f, -0.5f,  0.5f,
             0.5f,  0.5f,  0.5f,

            -0.5f, -0.5f, -0.5f,
            -0.5f, -0.5f,  0.5f,
            -0.5f,  0.5f, -0.5f,
            -0.5f,  0.5f,  0.5f,

             0.5f, -0.5f, -0.5f,
             0.5f, -0.5f,  0.5f,
             0.5f,  0.5f, -0.5f,
             0.5f,  0.5f,  0.5f,

            -0.5f, -0.5f,  0.5f,
            -0.5f, -0.5f, -0.5f,
             0.5f, -0.5f,  0.5f,
             0.5f, -0.5f, -0.5f,

            -0.5f,  0.5f,  0.5f,
            -0.5f,  0.5f, -0.5f,
             0.5f,  0.5f,  0.5f,
             0.5f,  0.5f, -0.5f
        };
        return vertices;
    }

    static std::vector<float> Normals() {
        static const std::vector<float> normals {
            // Back
            0.0f, 0.0f, -1.0f,
            0.0f, 0.0f, -1.0f,
            0.0f, 0.0f, -1.0f,
            0.0f, 0.0f, -1.0f,

            // Front
            0.0f, 0.0f, 1.0f,
            0.0f, 0.0f, 1.0f,
            0.0f, 0.0f, 1.0f,
            0.0f, 0.0f, 1.0f,

            // Left
            -1.0f, 0.0f, 0.0f,
            -1.0f, 0.0f, 0.0f,
            -1.0f, 0.0f, 0.0f,
            -1.0f, 0.0f, 0.0f,

            // Right
            1.0f, 0.0f, 0.0f,
            1.0f, 0.0f, 0.0f,
            1.0f, 0.0f, 0.0f,
            1.0f, 0.0f, 0.0f,

            // Bottom
            0.0f, -1.0f, 0.0f,
            0.0f, -1.0f, 0.0f,
            0.0f, -1.0f, 0.0f,
            0.0f, -1.0f, 0.0f,

            // Top
            0.0f, 1.0f, 0.0f,
            0.0f, 1.0f, 0.0f,
            0.0f, 1.0f, 0.0f,
            0.0f, 1.0f, 0.0f
        };
        return normals;
    }

    static std::vector<float> UVs() {
        static const std::vector<float> UVs {
            0.0f, 0.0f,
            0.0f, 1.0f,
            1.0f, 0.0f,
            1.0f, 1.0f,
            0.0f, 0.0f,
            0.0f, 1.0f,
            1.0f, 0.0f,
            1.0f, 1.0f,
            0.0f, 0.0f,
            0.0f, 1.0f,
            1.0f, 0.0f,
            1.0f, 1.0f,
            0.0f, 0.0f,
            0.0f, 1.0f,
            1.0f, 0.0f,
            1.0f, 1.0f,
            0.0f, 0.0f,
            0.0f, 1.0f,
            1.0f, 0.0f,
            1.0f, 1.0f,
            0.0f, 0.0f,
            0.0f, 1.0f,
            1.0f, 0.0f,
            1.0f, 1.0f
        };
        return UVs;
    }

    static std::vector<float> Colors() {
        static const std::vector<float> colors {
            1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, 0.0f,
            1.0f, 1.0f, 0.0f,
            1.0f, 1.0f, 0.0f,
            1.0f, 1.0f, 0.0f,
            1.0f, 0.0f, 1.0f,
            1.0f, 0.0f, 1.0f,
            1.0f, 0.0f, 1.0f,
            1.0f, 0.0f, 1.0f,
            0.0f, 1.0f, 1.0f,
            0.0f, 1.0f, 1.0f,
            0.0f, 1.0f, 1.0f,
            0.0f, 1.0f, 1.0f,
            1.0f, 0.0f, 0.0f,
            1.0f, 0.0f, 0.0f,
            1.0f, 0.0f, 0.0f,
            1.0f, 0.0f, 0.0f,
            0.0f, 1.0f, 0.0f,
            0.0f, 1.0f, 0.0f,
            0.0f, 1.0f, 0.0f,
            0.0f, 1.0f, 0.0f
        };
        return colors;
    }

    static std::vector<unsigned int> Triangles() {
        static const std::vector<unsigned int> triangles {
            // Back
            0,  1,  2,  2,  1,  3,
            // Front
            5,  4,  6,  5,  6,  7,
            // Left
            8,  9, 10,  10, 9, 11,
            // Right
           13, 12, 14, 13, 14, 15,
            // Bottom
           16, 17, 18, 18, 17, 19,
            // Top
           21, 20, 22, 21, 22, 23
        };
        return triangles;
    }
};

class Pyramid {
public:
    static std::vector<float> Vertices() {
        static const std::vector<float> vertices {
            // Base
            -0.5f, -0.5f,  0.5f,
            -0.5f, -0.5f, -0.5f,
             0.5f, -0.5f,  0.5f,
             0.5f, -0.5f, -0.5f,
            // -X Face
            -0.5f, -0.5f, -0.5f,
            -0.5f, -0.5f,  0.5f,
             0.0f,  0.5f,  0.0f,
            // +Z Face
            -0.5f, -0.5f,  0.5f,
             0.5f, -0.5f,  0.5f,
             0.0f,  0.5f,  0.0f,
            // +X Face
             0.5f, -0.5f,  0.5f,
             0.5f, -0.5f, -0.5f,
             0.0f,  0.5f,  0.0f,
            // -Z Face
            -0.5f, -0.5f, -0.5f,
             0.5f, -0.5f, -0.5f,
             0.0f,  0.5f,  0.0f
        };
        return vertices;
    }

    static std::vector<float> Normals() {
        static const std::vector<float> normals {
            // Base
            0.0f, -1.0f, 0.0f,
            0.0f, -1.0f, 0.0f,
            0.0f, -1.0f, 0.0f,
            0.0f, -1.0f, 0.0f,
            // -X Face
            -1.0f, 0.5f, 0.0f,
            -1.0f, 0.5f, 0.0f,
            -1.0f, 0.5f, 0.0f,
            // +Z Face
            0.0f, 0.5f, 1.0f,
            0.0f, 0.5f, 1.0f,
            0.0f, 0.5f, 1.0f,
            // +X Face
            1.0f, 0.5f, 0.0f,
            1.0f, 0.5f, 0.0f,
            1.0f, 0.5f, 0.0f,
            // -Z Face
            0.0f, 0.5f, -1.0f,
            0.0f, 0.5f, -1.0f,
            0.0f, 0.5f, -1.0f
        };
        return normals;
    }

    static std::vector<float> UVs() {
        static const std::vector<float> UVs {
            // Base
            0.0f, 1.0f,
            0.0f, 0.0f,
            1.0f, 0.0f,
            1.0f, 1.0f,
            // -X Face
            0.0f, 0.0f,
            1.0f, 0.0f,
            0.5f, 1.0f,
            // +Z Face
            0.0f, 0.0f,
            1.0f, 0.0f,
            0.5f, 1.0f,
            // +X Face
            0.0f, 0.0f,
            1.0f, 0.0f,
            0.5f, 1.0f,
            // -Z Face
            0.0f, 0.0f,
            1.0f, 0.0f,
            0.5f, 1.0f
        };
        return UVs;
    }

    static std::vector<float> Colors() {
        static const std::vector<float> colors {
            // Base
            1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, 1.0f,
            // -X Face
            1.0f, 0.0f, 0.0f,
            1.0f, 0.0f, 0.0f,
            1.0f, 0.0f, 0.0f,
            // +Z Face
            0.0f, 1.0f, 0.0f,
            0.0f, 1.0f, 0.0f,
            0.0f, 1.0f, 0.0f,
            // +X Face
            0.0f, 0.0f, 1.0f,
            0.0f, 0.0f, 1.0f,
            0.0f, 0.0f, 1.0f,
            // -Z Face
            1.0f, 1.0f, 0.0f,
            1.0f, 1.0f, 0.0f,
            1.0f, 1.0f, 0.0f
        };
        return colors;
    }

    static std::vector<unsigned int> Triangles() {
        static const std::vector<unsigned int> triangles {
            // Base
            0, 1, 2,
            2, 1, 3,
            // -X Face
            4, 5, 6,
            // +Z Face
            7, 8, 9,
            // +X Face
            10, 11, 12,
            // -Z Face
            14, 13, 15
        };
        return triangles;
    }
};

class Banana {
public:
    static std::vector<float> Vertices() {
        static const std::vector<float> vertices { 0.0, 0.10542291402816772, -0.20234595239162445, 0.08539889752864838, 0.10928019881248474, -0.20372721552848816, 0.08615782856941223, 0.07727283239364624, -0.2809962332248688, -0.007083360571414232, 0.0745452418923378, -0.2765538692474365, 0.08647221326828003, 5.0994511724411495e-08, -0.3130020797252655, -0.01001738477498293, 5.006419456776712e-08, -0.30729183554649353, 0.08615782856941223, -0.07727264612913132, -0.2809962332248688, -0.007083360571414232, -0.07454515248537064, -0.2765538692474365, 0.08539899438619614, -0.10928013920783997, -0.20372724533081055, 0.0, -0.10542285442352295, -0.20234598219394684, 0.08464006334543228, -0.07727266848087311, -0.12645813822746277, 0.007083360571414232, -0.07454517483711243, -0.12813805043697357, 0.08432568609714508, 1.538822402835649e-08, -0.09445224702358246, 0.01001738477498293, 1.5868502956095654e-08, -0.09740017354488373, 0.007083360571414232, 0.07454521954059601, -0.12813802063465118, 0.08463996648788452, 0.07727281004190445, -0.12645810842514038, -0.07014259696006775, 1.4186709584862456e-08, -0.08707740157842636, -0.07703854143619537, 0.0736466497182846, -0.11679312586784363, -0.09368687868118286, 0.10415216535329819, -0.18853344023227692, -0.07703854143619537, -0.07364670187234879, -0.11679324507713318, -0.162938192486763, 1.0897831970169136e-08, -0.0668904185295105, -0.1713266521692276, -0.07006917148828506, -0.09467534720897675, -0.11033522337675095, 0.0736466720700264, -0.2602737545967102, -0.11723116785287857, 4.724530100475022e-08, -0.2899895906448364, -0.22021831572055817, 4.1808331019410616e-08, -0.2566176950931549, -0.21182987093925476, 0.07006912678480148, -0.22883276641368866, -0.1713266521692276, 0.07006910443305969, -0.09467531740665436, -0.11033511906862259, -0.073646679520607, -0.2602737545967102, -0.21182987093925476, -0.07006914913654327, -0.22883279621601105, -0.19157825410366058, 0.09909272193908691, -0.16175398230552673, -0.09368687868118286, -0.10415210574865341, -0.1885334700345993, -0.19157825410366058, -0.0990927517414093, -0.16175401210784912, 0.1545368731021881, 0.10823499411344528, -0.19073908030986786, 0.1666821390390396, 0.07653367519378662, -0.26630282402038574, 0.1423916071653366, 0.07653365284204483, -0.115175262093544, 0.1666821390390396, -0.07653358578681946, -0.26630282402038574, 0.1545368731021881, -0.10823483020067215, -0.19073902070522308, 0.1423916071653366, -0.07653360813856125, -0.1151752918958664, 0.1373608261346817, 1.3665077069902054e-08, -0.0838756412267685, 0.17171283066272736, 4.848559242986994e-08, -0.29760244488716125, 0.27676427364349365, 0.0747632086277008, -0.22114969789981842, 0.2872825264930725, 4.0775251619606934e-08, -0.25027671456336975, 0.21545954048633575, 8.371773496662627e-09, -0.051385581493377686, 0.22597774863243103, 0.07476318627595901, -0.08051247149705887, 0.25137102603912354, -0.10573098808526993, -0.15083107352256775, 0.22597774863243103, -0.07476305961608887, -0.08051250129938126, 0.27676427364349365, -0.07476303726434708, -0.2211497277021408, 0.25137102603912354, 0.10573113709688187, -0.15083113312721252, 0.3970800042152405, 2.644521401862221e-08, -0.16231957077980042, 0.37995898723602295, -0.07016461342573166, -0.13883469998836517, 0.29729148745536804, 0.0701647400856018, -0.025439614430069923, 0.3386252224445343, 0.0992278903722763, -0.08213714510202408, 0.37995898723602295, 0.070164754986763, -0.13883467018604279, 0.2972915768623352, -0.07016462832689285, -0.025439636781811714, 0.28017058968544006, 3.1846997261553156e-10, -0.0019547545816749334, 0.3386252224445343, -0.09922786056995392, -0.08213717490434647, 0.42372632026672363, -0.056192994117736816, -0.04525510594248772, 0.37698185443878174, -0.0794689804315567, -0.014068343676626682, 0.4237264096736908, 0.05619309842586517, -0.04525499418377876, 0.4430886507034302, 9.477586715433972e-09, -0.05817301571369171, 0.31087514758110046, 8.971273501856558e-08, 0.030036259442567825, 0.3302372694015503, 0.05619308724999428, 0.01711825653910637, 0.3302372694015503, -0.05619300529360771, 0.017118331044912338, 0.3769817650318146, 0.0794689804315567, -0.014068412594497204, 0.3842240571975708, -0.04667079076170921, 0.05340106412768364, 0.3531033992767334, -0.03300123289227486, 0.06438220292329788, 0.4282354712486267, -6.170043143072235e-09, 0.037871453911066055, 0.415344774723053, -0.03300122916698456, 0.042419929057359695, 0.3531033992767334, 0.03300130367279053, 0.06438221782445908, 0.3842240571975708, 0.04667077586054802, 0.05340107902884483, 0.415344774723053, 0.033001307398080826, 0.04241993650794029, 0.3402128219604492, -1.1230250507310302e-08, 0.06893078982830048, -0.3059561848640442, 0.06443626433610916, -0.17060279846191406, -0.2773277759552002, 0.09112656861543655, -0.1128755733370781, -0.23684091866016388, 5.089122900869825e-09, -0.031236814334988594, -0.24869924783706665, -0.06443622708320618, -0.05514827370643616, -0.2773277759552002, -0.09112663567066193, -0.11287560313940048, -0.3059561848640442, -0.06443630158901215, -0.1706029176712036, -0.3178146183490753, -6.291586629458834e-08, -0.19451427459716797, -0.2486993372440338, 0.06443624198436737, -0.055148251354694366, -0.38285234570503235, -7.292508996670222e-08, -0.13307808339595795, -0.37150537967681885, 0.05615006759762764, -0.11277566850185394, -0.31671804189682007, 0.056150052696466446, -0.014746742323040962, -0.30537116527557373, -9.551139612540283e-08, 0.0055556586012244225, -0.3167179524898529, -0.05615014210343361, -0.014746760949492455, -0.34411174058914185, -0.07940823584794998, -0.06376123428344727, -0.37150537967681885, -0.056150127202272415, -0.11277568340301514, -0.34411174058914185, 0.07940815389156342, -0.06376120448112488, -0.40733909606933594, -0.041122209280729294, -0.06563527882099152, -0.416300505399704, -8.155292618994281e-08, -0.08012081682682037, -0.3857046067714691, 0.05815551429986954, -0.030664153397083282, -0.3640700578689575, 0.04112212732434273, 0.004307051654905081, -0.40733909606933594, 0.04112213850021362, -0.06563526391983032, -0.3551087975502014, -9.76679643827083e-08, 0.018792588263750076, -0.3640700578689575, -0.04112222045660019, 0.004307038616389036, -0.3857046067714691, -0.0581556037068367, -0.030664172023534775, -0.40997767448425293, -0.033891841769218445, 0.0005144633469171822, -0.42391344904899597, -0.023965181782841682, -0.018982088193297386, -0.42968595027923584, -9.019797886367087e-08, -0.027057863771915436, -0.42391344904899597, 0.023965001106262207, -0.01898208074271679, -0.3960418105125427, 0.02396499365568161, 0.02001102641224861, -0.39026939868927, -9.918218779603194e-08, 0.02808680199086666, -0.3960418105125427, -0.02396509423851967, 0.020011018961668015, -0.40997767448425293, 0.03389165177941322, 0.0005144744063727558, -0.4223082661628723, -0.015862638130784035, 0.028826432302594185, -0.43153244256973267, -0.02243322879076004, 0.015921568498015404, -0.4407566785812378, -0.015862727537751198, 0.003016707254573703, -0.44457757472991943, -9.4226862756841e-08, -0.002328733215108514, -0.43153244256973267, 0.02243303693830967, 0.015921575948596, -0.4223082661628723, 0.01586253196001053, 0.028826436027884483, -0.4407566785812378, 0.015862537547945976, 0.003016712376847863, -0.41848739981651306, -1.0017355123181915e-07, 0.034171782433986664, -0.43800806999206543, -9.84059411734961e-08, 0.023322241380810738, 0.35428428649902344, -2.1145899253838252e-08, 0.12979261577129364, 0.36380934715270996, 0.023068392649292946, 0.1290324479341507, 0.38680461049079895, -0.032623667269945145, 0.12719745934009552, 0.36380934715270996, -0.02306843362748623, 0.1290324479341507, 0.41932493448257446, -2.0300294778508032e-08, 0.1246023178100586, 0.4097999036312103, -0.02306843362748623, 0.12536247074604034, 0.38680461049079895, 0.03262371942400932, 0.12719745934009552, 0.4097999036312103, 0.023068487644195557, 0.12536247074604034, 0.376850426197052, 0.020261507481336594, 0.19867362082004547, 0.39704766869544983, 0.028654031455516815, 0.19706182181835175, 0.41724491119384766, 0.020261507481336594, 0.19545020163059235, 0.37685033679008484, -0.020261477679014206, 0.19867362082004547, 0.36848440766334534, 6.212944470007642e-08, 0.199341282248497, 0.41724491119384766, -0.020261477679014206, 0.19545020163059235, 0.39704766869544983, -0.02865399792790413, 0.19706182181835175, 0.42561089992523193, -3.1734110450543085e-08, 0.1947825700044632, 0.42673414945602417, 0.02763483300805092, 0.22167165577411652, 0.43814462423324585, -3.596655773208113e-08, 0.22076116502285004, 0.36022916436195374, 5.762672827813731e-08, 0.22697877883911133, 0.371639609336853, 0.02763483114540577, 0.22606819868087769, 0.3991868495941162, -0.039081599563360214, 0.2238699346780777, 0.371639609336853, -0.027634810656309128, 0.22606819868087769, 0.42673414945602417, -0.02763480879366398, 0.22167165577411652, 0.3991868495941162, 0.039081621915102005, 0.2238699346780777, 0.44018784165382385, -4.013797294533106e-08, 0.24636511504650116, 0.429576575756073, -0.027634812518954277, 0.24008269608020782, 0.3735916316509247, 0.02763482928276062, 0.24246808886528015, 0.4012300968170166, 0.03908161818981171, 0.24947388470172882, 0.4287773370742798, 0.02763482742011547, 0.24727560579776764, 0.3735915422439575, -0.027634812518954277, 0.24246808886528015, 0.3624550700187683, 5.553443216399501e-08, 0.23982121050357819, 0.4020293056964874, -0.03908160328865051, 0.24148163199424744, 0.4012300968170166, 5.488056586955281e-08, 0.24383459985256195 };
        return vertices;
    }

    static std::vector<float> Normals() {
        static const std::vector<float> normals { -0.03021332435309887, 0.99945068359375, -0.013275551609694958, -0.012909329496324062, 0.9996337890625, -0.02294991910457611, 0.0397351011633873, 0.6963408589363098, -0.7165746092796326, -0.08569597452878952, 0.6991180181503296, -0.7097994685173035, 0.058229316025972366, 0.0, -0.9982909560203552, -0.10913418978452682, 0.0, -0.9940183758735657, 0.0397351011633873, -0.6963408589363098, -0.7165746092796326, -0.08569597452878952, -0.6991180181503296, -0.7097994685173035, -0.012909329496324062, -0.9996337890625, -0.02294991910457611, -0.03021332435309887, -0.99945068359375, -0.013275551609694958, -0.08197271823883057, -0.7191076278686523, 0.6900234818458557, 0.02294991910457611, -0.7149571180343628, 0.6987518072128296, -0.11822870373725891, 0.0, 0.9929807186126709, 0.044007688760757446, 0.0, 0.9990233778953552, 0.02294991910457611, 0.7149571180343628, 0.6987518072128296, -0.08197271823883057, 0.7191076278686523, 0.6900234818458557, 0.17038483917713165, 0.0, 0.9853510856628418, 0.1106906309723854, 0.713827908039093, 0.6914578676223755, -0.032868433743715286, 0.999420166015625, -0.007232886739075184, 0.1106906309723854, -0.713827908039093, 0.6914578676223755, 0.3258156180381775, 0.0, 0.9454023838043213, 0.20148320496082306, -0.7235938310623169, 0.6601458787918091, -0.17557299137115479, 0.6999725103378296, -0.6922208070755005, -0.23432111740112305, 0.0, -0.9721366167068481, -0.4223151206970215, 0.0, -0.9064302444458008, -0.3245338201522827, 0.6891995072364807, -0.6477553844451904, 0.20148320496082306, 0.7235938310623169, 0.6601458787918091, -0.17557299137115479, -0.6999725103378296, -0.6922208070755005, -0.3245338201522827, -0.6891995072364807, -0.6477553844451904, -0.07409894466400146, 0.9972228407859802, -0.006530961021780968, -0.032868433743715286, -0.999420166015625, -0.007232886739075184, -0.07409894466400146, -0.9972228407859802, -0.006530961021780968, 0.026795251294970512, 0.99945068359375, -0.018585771322250366, 0.21027253568172455, 0.6924955248832703, -0.6900539994239807, -0.1895504593849182, 0.7182531356811523, 0.669423520565033, 0.21027253568172455, -0.6924955248832703, -0.6900539994239807, 0.026795251294970512, -0.99945068359375, -0.018585771322250366, -0.1895809769630432, -0.7182531356811523, 0.669423520565033, -0.2920010983943939, 0.0, 0.9563890695571899, 0.2782372534275055, 0.0, -0.9604785442352295, 0.3820001780986786, 0.6859340071678162, -0.6192815899848938, 0.503769040107727, 0.0, -0.8638263940811157, -0.5007781982421875, 0.0, 0.8655659556388855, -0.3234351575374603, 0.7229529619216919, 0.6104617714881897, 0.0554216131567955, -0.9983825087547302, -0.010193182155489922, -0.3234351575374603, -0.7229529619216919, 0.6104617714881897, 0.3820001780986786, -0.6859340071678162, -0.6192815899848938, 0.0554216131567955, 0.9983825087547302, -0.010193182155489922, 0.7857905626296997, 0.0, -0.6184576153755188, 0.6120792031288147, -0.670003354549408, -0.4200262427330017, -0.40150150656700134, 0.7273781299591064, 0.556474506855011, 0.14517654478549957, 0.9868770241737366, 0.07055879384279251, 0.6120792031288147, 0.670003354549408, -0.4200262427330017, -0.40150150656700134, -0.7273781299591064, 0.556474506855011, -0.6676229238510132, 0.0, 0.7444685101509094, 0.14517654478549957, -0.9868770241737366, 0.07055879384279251, 0.7813043594360352, -0.6237983107566833, -0.01986755058169365, 0.22370067238807678, -0.9319437146186829, 0.2853480577468872, 0.7813043594360352, 0.6237983107566833, -0.01986755058169365, 0.9888912439346313, 0.0, -0.14844202995300293, -0.7624744176864624, 0.0, 0.6469923853874207, -0.4420606195926666, 0.7007660269737244, 0.5598620772361755, -0.4420606195926666, -0.7007660269737244, 0.5598620772361755, 0.22370067238807678, 0.9319437146186829, 0.2853480577468872, 0.126010924577713, -0.9381999969482422, 0.32227545976638794, -0.5936155319213867, -0.6935636401176453, 0.40812402963638306, 0.9896542429924011, 0.0, 0.1432538777589798, 0.7560960650444031, -0.6229743361473083, 0.20047609508037567, -0.5936155319213867, 0.6935636401176453, 0.40812402963638306, 0.126010924577713, 0.9381999969482422, 0.32227545976638794, 0.7560960650444031, 0.6229743361473083, 0.20047609508037567, -0.903988778591156, 0.0, 0.4275338053703308, -0.47065645456314087, 0.6890469193458557, -0.5510421991348267, -0.10596026480197906, 0.9935606122016907, 0.0398571714758873, 0.4538712799549103, 0.0, 0.8910489082336426, 0.2850733995437622, -0.712179958820343, 0.6414990425109863, -0.10596026480197906, -0.9935606122016907, 0.0398571714758873, -0.47065645456314087, -0.6890469193458557, -0.5510421991348267, -0.6130558252334595, 0.0, -0.7900326251983643, 0.2850733995437622, 0.712179958820343, 0.6414990425109863, -0.766075611114502, 0.0, -0.6427198052406311, -0.6105838418006897, 0.669850766658783, -0.42240670323371887, 0.19537949562072754, 0.696096658706665, 0.6908169984817505, 0.3718375265598297, 0.0, 0.9282814860343933, 0.19537949562072754, -0.696096658706665, 0.6908169984817505, -0.21790215373039246, -0.9678030014038086, 0.125766783952713, -0.6105838418006897, -0.669850766658783, -0.42240670323371887, -0.21790215373039246, 0.9678030014038086, 0.125766783952713, -0.7693105936050415, -0.5958433747291565, -0.2304452657699585, -0.9112827181816101, 0.0, -0.4117252230644226, -0.39127781987190247, 0.8900418281555176, 0.23389385640621185, 0.04992828145623207, 0.669484555721283, 0.7411114573478699, -0.7693105936050415, 0.5958433747291565, -0.2304452657699585, 0.25797295570373535, 0.0, 0.9661244750022888, 0.04992828145623207, -0.669484555721283, 0.7411114573478699, -0.39127781987190247, -0.8900418281555176, 0.23389385640621185, -0.36939603090286255, -0.8792687654495239, 0.3006073236465454, -0.774071455001831, -0.6096987724304199, -0.17041535675525665, -0.9323709607124329, 0.0, -0.36149173974990845, -0.774071455001831, 0.6096987724304199, -0.17041535675525665, 0.057527389377355576, 0.6264839768409729, 0.7772759199142456, 0.23526719212532043, 0.0, 0.9719229936599731, 0.057527389377355576, -0.6264839768409729, 0.7772759199142456, -0.36939603090286255, 0.8792687654495239, 0.3006073236465454, -0.22656941413879395, -0.5342265367507935, 0.8143864274024963, -0.5437177419662476, -0.7457503080368042, 0.38489943742752075, -0.8525345325469971, -0.52146977186203, -0.03491317480802536, -0.9784234166145325, 0.0, -0.206488236784935, -0.5437177419662476, 0.7457503080368042, 0.38489943742752075, -0.22656941413879395, 0.5342265367507935, 0.8143864274024963, -0.8525345325469971, 0.52146977186203, -0.03491317480802536, -0.09222693741321564, 0.0, 0.9957274198532104, -0.7896358966827393, 0.0, 0.6135441064834595, -0.9770195484161377, 0.0, 0.21308022737503052, -0.69557785987854, 0.6925870776176453, 0.1909543126821518, -0.0010071108117699623, -0.9918210506439209, 0.1275368481874466, -0.69557785987854, -0.6925870776176453, 0.1909543126821518, 0.9998779296875, 0.0, 0.013702810741961002, 0.7065035104751587, -0.7059236168861389, 0.04986724257469177, -0.0010071108117699623, 0.9918210506439209, 0.1275368481874466, 0.7065035104751587, 0.7059236168861389, 0.04986724257469177, -0.7049165368080139, 0.7040314674377441, -0.08587908744812012, -0.005127109587192535, 0.9862056374549866, -0.16537980735301971, 0.6812036633491516, 0.6905423402786255, -0.24301889538764954, -0.7049165368080139, -0.7040314674377441, -0.08587908744812012, -0.9985961318016052, 0.0, -0.05243080109357834, 0.6812036633491516, -0.6905423402786255, -0.24301889538764954, -0.005127109587192535, -0.9862056374549866, -0.16537980735301971, 0.9615161418914795, 0.0, -0.27463605999946594, 0.6797997951507568, 0.69600510597229, -0.2310556322336197, 0.965514063835144, 0.007324442267417908, -0.2601397633552551, -0.9986266493797302, 0.0, -0.05212561413645744, -0.7139500379562378, 0.6925565600395203, -0.1028168573975563, -0.022766808047890663, -0.9841609001159668, -0.17569506168365479, -0.7139500379562378, -0.6925565600395203, -0.1028168573975563, 0.669667661190033, -0.6971648335456848, -0.2558977007865906, -0.015381328761577606, 0.9845576286315918, -0.1743522435426712, 0.764854907989502, -0.04919583722949028, 0.6422620415687561, 0.5948973298072815, -0.6102175712585449, 0.5231482982635498, -0.5926694273948669, 0.5057222247123718, 0.6268501877784729, -0.027558214962482452, 0.7087618708610535, 0.7048555016517639, 0.574663519859314, 0.5225379467010498, 0.6298104524612427, -0.5305948257446289, -0.5284280180931091, 0.6627094149589539, -0.7671437859535217, 0.0, 0.6414380073547363, 0.051271095871925354, -0.7896664142608643, 0.6113467812538147, -0.052888575941324234, -0.08291879296302795, 0.9951475858688354 };
        return normals;
    }

    static std::vector<unsigned int> Triangles() {
        static const std::vector<unsigned int> triangles { 0, 1, 2, 3, 2, 4, 4, 6, 7, 6, 8, 9, 8, 10, 11, 10, 12, 13, 14, 15, 1, 13, 12, 15, 16, 13, 14, 17, 14, 0, 11, 13, 16, 16, 20, 21, 22, 23, 24, 16, 17, 26, 27, 28, 24, 18, 22, 25, 17, 18, 29, 30, 31, 28, 19, 21, 31, 9, 11, 19, 7, 9, 30, 5, 7, 27, 22, 3, 5, 18, 0, 3, 1, 32, 33, 15, 34, 32, 8, 6, 35, 10, 8, 36, 12, 10, 37, 2, 33, 39, 12, 38, 34, 6, 4, 39, 33, 40, 41, 38, 42, 43, 37, 36, 44, 35, 39, 41, 34, 43, 47, 32, 47, 40, 38, 37, 45, 36, 35, 46, 46, 41, 48, 43, 50, 51, 47, 51, 52, 42, 45, 53, 44, 46, 49, 40, 52, 48, 42, 54, 50, 45, 44, 55, 55, 49, 56, 52, 58, 59, 54, 60, 61, 53, 55, 57, 49, 48, 59, 50, 61, 63, 51, 63, 58, 54, 53, 62, 62, 57, 64, 56, 59, 66, 61, 68, 69, 63, 69, 70, 60, 62, 65, 57, 56, 67, 58, 70, 66, 60, 71, 68, 29, 25, 72, 20, 74, 75, 31, 76, 77, 25, 24, 78, 20, 26, 79, 21, 75, 76, 28, 77, 78, 26, 29, 73, 72, 78, 80, 74, 79, 82, 75, 84, 85, 77, 86, 80, 79, 73, 87, 73, 72, 81, 74, 83, 84, 76, 85, 86, 86, 88, 89, 82, 87, 90, 87, 81, 92, 83, 93, 94, 85, 95, 88, 81, 80, 89, 83, 82, 91, 84, 94, 95, 95, 96, 97, 92, 89, 98, 93, 91, 100, 94, 102, 96, 88, 97, 98, 91, 90, 103, 90, 92, 99, 93, 101, 102, 102, 104, 105, 97, 106, 107, 100, 103, 108, 103, 99, 110, 102, 101, 111, 96, 105, 106, 98, 107, 110, 100, 109, 111, 105, 104, 112, 106, 105, 112, 109, 108, 112, 108, 110, 112, 107, 106, 112, 111, 109, 112, 110, 107, 112, 104, 111, 112, 71, 113, 114, 65, 64, 115, 67, 66, 117, 68, 114, 119, 69, 119, 120, 71, 65, 116, 64, 67, 118, 70, 120, 117, 119, 114, 121, 120, 119, 122, 116, 124, 125, 118, 126, 127, 117, 120, 123, 114, 113, 125, 115, 127, 124, 117, 128, 126, 128, 123, 129, 125, 131, 132, 124, 127, 133, 128, 130, 135, 121, 132, 136, 122, 136, 129, 125, 124, 134, 127, 126, 135, 130, 137, 138, 136, 132, 139, 129, 136, 140, 134, 142, 143, 135, 138, 144, 130, 129, 141, 132, 131, 143, 133, 144, 142, 138, 137, 145, 141, 140, 145, 140, 139, 145, 144, 138, 145, 142, 144, 145, 143, 142, 145, 137, 141, 145, 139, 143, 145, 3, 0, 2, 5, 3, 4, 5, 4, 7, 7, 6, 9, 9, 8, 11, 11, 10, 13, 0, 14, 1, 14, 13, 15, 17, 16, 14, 18, 17, 0, 19, 11, 16, 19, 16, 21, 25, 22, 24, 20, 16, 26, 23, 27, 24, 29, 18, 25, 26, 17, 29, 27, 30, 28, 30, 19, 31, 30, 9, 19, 27, 7, 30, 23, 5, 27, 23, 22, 5, 22, 18, 3, 2, 1, 33, 1, 15, 32, 36, 8, 35, 37, 10, 36, 38, 12, 37, 4, 2, 39, 15, 12, 34, 35, 6, 39, 39, 33, 41, 34, 38, 43, 45, 37, 44, 46, 35, 41, 32, 34, 47, 33, 32, 40, 42, 38, 45, 44, 36, 46, 49, 46, 48, 47, 43, 51, 40, 47, 52, 54, 42, 53, 55, 44, 49, 41, 40, 48, 43, 42, 50, 53, 45, 55, 57, 55, 56, 48, 52, 59, 50, 54, 61, 62, 53, 57, 56, 49, 59, 51, 50, 63, 52, 51, 58, 60, 54, 62, 65, 62, 64, 67, 56, 66, 63, 61, 69, 58, 63, 70, 71, 60, 65, 64, 57, 67, 59, 58, 66, 61, 60, 68, 73, 29, 72, 21, 20, 75, 28, 31, 77, 72, 25, 78, 74, 20, 79, 31, 21, 76, 24, 28, 78, 79, 26, 73, 81, 72, 80, 83, 74, 82, 76, 75, 85, 78, 77, 80, 82, 79, 87, 87, 73, 81, 75, 74, 84, 77, 76, 86, 80, 86, 89, 91, 82, 90, 90, 87, 92, 84, 83, 94, 86, 85, 88, 92, 81, 89, 93, 83, 91, 85, 84, 95, 88, 95, 97, 99, 92, 98, 101, 93, 100, 95, 94, 96, 89, 88, 98, 100, 91, 103, 103, 90, 99, 94, 93, 102, 96, 102, 105, 98, 97, 107, 109, 100, 108, 108, 103, 110, 104, 102, 111, 97, 96, 106, 99, 98, 110, 101, 100, 111, 68, 71, 114, 116, 65, 115, 118, 67, 117, 69, 68, 119, 70, 69, 120, 113, 71, 116, 115, 64, 118, 66, 70, 117, 122, 119, 121, 123, 120, 122, 113, 116, 125, 115, 118, 127, 128, 117, 123, 121, 114, 125, 116, 115, 124, 118, 117, 126, 130, 128, 129, 121, 125, 132, 134, 124, 133, 126, 128, 135, 122, 121, 136, 123, 122, 129, 131, 125, 134, 133, 127, 135, 135, 130, 138, 140, 136, 139, 141, 129, 140, 131, 134, 143, 133, 135, 144, 137, 130, 141, 139, 132, 143, 134, 133, 142 };
        return triangles;
    }
};

#endif // CUBE_H
